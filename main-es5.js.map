{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/author-form/author-form.component.html","webpack:///src/app/authors/authors.component.html","webpack:///src/app/book-form/book-form.component.html","webpack:///src/app/books/books.component.html","webpack:///src/app/borrowed-books/borrowed-books.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/register/register.component.html","webpack:///src/app/user-form/user-form.component.html","webpack:///src/app/users-panel/users-panel.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/author-form/author-form.component.css","webpack:///src/app/author-form/author-form.component.ts","webpack:///src/app/authors/authors.component.css","webpack:///src/app/authors/authors.component.ts","webpack:///src/app/book-form/book-form.component.css","webpack:///src/app/book-form/book-form.component.ts","webpack:///src/app/books/books.component.css","webpack:///src/app/books/books.component.ts","webpack:///src/app/borrowed-books/borrowed-books.component.css","webpack:///src/app/borrowed-books/borrowed-books.component.ts","webpack:///src/app/home/home.component.css","webpack:///src/app/home/home.component.ts","webpack:///src/app/login/login.component.css","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/register/register.component.css","webpack:///src/app/register/register.component.ts","webpack:///src/app/services/admin-guard.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/author.service.ts","webpack:///src/app/services/book.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/user-form/user-form.component.css","webpack:///src/app/user-form/user-form.component.ts","webpack:///src/app/users-panel/users-panel.component.css","webpack:///src/app/users-panel/users-panel.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","canActivate","AppRoutingModule","imports","forRoot","AppComponent","title","selector","template","config","PROVIDER_ID","provider","provideConfig","AppModule","declarations","providers","provide","useClass","multi","useFactory","bootstrap","AuthorFormComponent","fb","authorService","snackBar","matcher","authorForm","group","firstName","required","lastName","addAuthor","value","subscribe","data","openSnackBar","message","action","className","open","duration","panelClass","get","AuthorsComponent","displayedColumns","activePageDataChunk","pageSize","getAuthors","authors","authorsCount","length","slice","dataSource","firstCut","pageIndex","secondCut","event","filterValue","target","filter","trim","toLowerCase","authorId","deleteAuthor","toString","filteredList","a","BookFormComponent","bookService","route","router","actionText","params","p","bookId","bookForm","releaseDate","totalCount","authorList","getBook","book","controls","setValue","selectedAuthors","map","aut","authList","el","find","x","parseInt","deleteAuthorFromBook","updateBook","addAuthorToBook","createBook","auth","BooksComponent","authService","bookFilterForm","Title","ReleaseDate","ReleaseDateFrom","ReleaseDateTo","getBooks","books","bookCount","getUserInfo","localStorage","setItem","userId","isAdmin","deleteBook","filterObj","dateStrToSendToServer","Date","toISOString","getBookFilter","getItem","borrowBook","navigate","error","BorrowedBooksComponent","borrowedBooks","getBorrowedBooks","returnBook","HomeComponent","LoginComponent","socialAuthService","gmailIcon","loginForm","userName","password","login","saveToken","access_token","getUserRole","role","saveRole","signIn","getIdentityServerToken","identityToken","NavMenuComponent","isExpanded","logout","RegisterComponent","MyErrorStateMatcher","registerForm","email","confirmPassword","validators","checkPasswords","register","notSame","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","AdminGuardService","isAuthenticated","providedIn","AuthGuardService","AuthService","http","loginPath","apiUrl","registerPath","dataPath","getUserRolePath","googleTokenPath","options","headers","set","corsOptions","body","URLSearchParams","post","token","responseType","removeItem","getToken","AuthorService","authorsPath","deleteAuthorPath","createAuthorPath","pipe","author","BookService","bookPath","getBooksParamsPath","deleteBookPath","createBookPath","addAuthorToBookPath","deleteAuthorFromBookPath","getBookPath","updateBookPath","borrowBookPath","getBorrowedBooksPath","returnBookPath","obj","parts","prop","undefined","val","push","encodeURIComponent","join","toQueryString","put","TokenInterceptorService","request","next","clone","setHeaders","Authorization","handle","UsersService","usersPath","deleteUserPath","getUsersFilterPath","users","user","UserFormComponent","userForm","UsersPanelComponent","userService","userFilterForm","UserName","Email","getUsers","usersCount","paginator","deleteUser","getUsersFilter","firstPage","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<body>\\n  <app-nav-menu></app-nav-menu>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</body>\";","export default \"<div class=\\\"row form-wrapper\\\">\\n    <div class=\\\"col-lg-6 col-md-8 col-sm-12\\\">\\n        <div class=\\\"mb-3 card mx-auto\\\">\\n            <div class=\\\"card-header-tab card-header \\\">\\n                <div>\\n                    <a [routerLink]=\\\"['/authors']\\\" class=\\\"btn btn-outline-secondary\\\" >Back to panel</a>\\n                </div>\\n                <div class=\\\"text-center\\\">\\n                    <span class=\\\"text-center\\\">Create Author</span>\\n                </div>\\n            </div>\\n            <form [formGroup]=\\\"authorForm\\\" (ngSubmit)=\\\"addAuthor()\\\">\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter author name</mat-label>\\n                    <input matInput placeholder=\\\"Stephen\\\" formControlName=\\\"firstName\\\">\\n                    <mat-error *ngIf=\\\"firstName.invalid\\\">Name is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter author surname</mat-label>\\n                    <input matInput placeholder=\\\"King\\\" formControlName=\\\"lastName\\\">\\n                    <mat-error *ngIf=\\\"lastName.invalid\\\">Surname is required</mat-error>\\n                </mat-form-field>\\n       \\n                <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"authorForm.invalid\\\"\\n                        class=\\\"btn btn-outline-primary\\\">Create</button>\\n    \\n                </div>\\n            </form>\\n    \\n        </div>\\n    </div>\\n</div>\";","export default \"<div>\\n    <a [routerLink]=\\\"['/author-form']\\\" class=\\\"btn btn-outline-primary\\\">Create author</a>\\n</div>\\n\\n<mat-form-field class=\\\"example-full-width text-center\\\">\\n    <mat-label>Search author</mat-label>\\n    <input (keyup)=\\\"applyFilter($event)\\\" matInput placeholder=\\\"Ex Stephen King\\\">\\n</mat-form-field>\\n<mat-table class=\\\"mat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"authorId\\\">\\n        <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.authorId}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"firstName\\\">\\n        <mat-header-cell *matHeaderCellDef>FirstName</mat-header-cell>\\n        <mat-cell class=\\\"description-cell\\\" *matCellDef=\\\"let element\\\">{{element.firstName}}</mat-cell>\\n\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"lastName\\\">\\n        <mat-header-cell *matHeaderCellDef>LastName</mat-header-cell>\\n        <mat-cell class=\\\"duration-cell\\\" *matCellDef=\\\"let element\\\">{{element.lastName}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n            <button (click)=\\\"deleteAuthor(row.authorId)\\\" mat-icon-button matTooltip=\\\"Click to Delete\\\" class=\\\"iconbutton\\\"\\n                color=\\\"warn\\\">\\n                <mat-icon aria-label=\\\"delete\\\">delete</mat-icon>\\n            </button>\\n        </td>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n\\n</mat-table>\\n\\n<mat-paginator [length]=\\\"authorsCount\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"onPageChanged($event,target)\\\" [hidePageSize]=\\\"true\\\">\\n</mat-paginator>\\n\";","export default \"<div class=\\\"row form-wrapper\\\">\\n    <div class=\\\"col-lg-6 col-md-8 col-sm-12\\\">\\n        <div class=\\\"mb-3 card mx-auto\\\">\\n            <div class=\\\"card-header-tab card-header \\\">\\n                <div>\\n                    <a [routerLink]=\\\"['/books']\\\" class=\\\"btn btn-outline-secondary\\\">Back to panel</a>\\n                </div>\\n                <div class=\\\"text-center\\\">\\n                    <span class=\\\"text-center\\\">{{actionText}} book</span>\\n                </div>\\n            </div>\\n            <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"addBook()\\\">\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter book title</mat-label>\\n                    <input matInput placeholder=\\\"Ex. The Lord of the Rings\\\" formControlName=\\\"title\\\">\\n                    <mat-error *ngIf=\\\"title.invalid\\\">Title is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <mat-label>Enter release date</mat-label>\\n                    <input formControlName=\\\"releaseDate\\\" matInput [matDatepicker]=\\\"picker\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                    <mat-error *ngIf=\\\"releaseDate.invalid\\\">Date is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter total count</mat-label>\\n                    <input type=\\\"number\\\" matInput placeholder=\\\"Ex. 5\\\" formControlName=\\\"totalCount\\\">\\n                    <mat-error *ngIf=\\\"totalCount.invalid\\\">Count is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <mat-label>Pick book authors</mat-label>\\n                    <mat-select formControlName=\\\"authors\\\" multiple>\\n                        <mat-select-trigger>\\n                            {{this.bookForm.controls.authors.value ? this.bookForm.controls['authors']?.value[0]: ''}}\\n                            <span *ngIf=\\\"bookForm.controls.authors.value?.length > 1\\\"\\n                                class=\\\"example-additional-selection\\\">\\n                                (+{{bookForm.controls.authors.value.length - 1}}\\n                                {{bookForm.controls.authors.value?.length === 2 ? 'another' : 'others'}})\\n                            </span>\\n                        </mat-select-trigger>\\n                        <mat-option *ngFor=\\\"let author of authorList\\\" [value]=\\\"author.firstName\\\">{{author.firstName.substr(0,1) + \\\". \\\" + author.lastName}}\\n                        </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"bookForm.controls.authors.errors?.required\\\">Authors must be picked\\n                    </mat-error>\\n                </mat-form-field>\\n                <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"bookForm.invalid\\\" class=\\\"btn btn-outline-primary\\\">{{actionText}}</button>\\n\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div style=\\\"overflow: hidden;\\\">\\n    <a *ngIf=\\\"isAdmin\\\" [routerLink]=\\\"['/book-form']\\\" class=\\\"btn btn-outline-primary left\\\">Create book</a>\\n    <a [routerLink]=\\\"['/my-books/'+userId]\\\" class=\\\"btn btn-outline-warning right\\\">My books</a>\\n</div>\\n\\n<div class=\\\"row form-wrapper\\\">\\n    <div class=\\\"mb-3 card .mx-auto\\\">\\n        <form [formGroup]=\\\"bookFilterForm\\\" (ngSubmit)=\\\"applyFilters()\\\">\\n\\n            <mat-form-field class=\\\"example-full-width text-center\\\">\\n                <mat-label>Search by title</mat-label>\\n                <input matInput formControlName=\\\"Title\\\" placeholder=\\\"Ex The Lord of the Rings\\\">\\n            </mat-form-field>\\n            <mat-form-field>\\n                <mat-label>Enter release year</mat-label>\\n                <input formControlName=\\\"ReleaseDate\\\" matInput [matDatepicker]=\\\"picker1\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <mat-label>Pick book authors</mat-label>\\n                <mat-select formControlName=\\\"authors\\\" multiple>\\n                    <mat-select-trigger>\\n                        {{this.bookFilterForm.controls.authors.value ? this.bookFilterForm.controls['authors']?.value[0]: ''}}\\n                        <span *ngIf=\\\"bookFilterForm.controls.authors.value?.length > 1\\\"\\n                            class=\\\"example-additional-selection\\\">\\n                            (+{{bookFilterForm.controls.authors.value.length - 1}}\\n                            {{bookFilterForm.controls.authors.value?.length === 2 ? 'another' : 'others'}})\\n                        </span>\\n                    </mat-select-trigger>\\n                    <mat-option *ngFor=\\\"let author of authorList\\\" [value]=\\\"author.authorId\\\">\\n                        {{author.firstName.substr(0,1) + \\\". \\\" + author.lastName}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <div class=\\\"inl-wrapper\\\">\\n                <div class=\\\"inline-date\\\">\\n                    <mat-form-field>\\n                        <mat-label>Enter date from</mat-label>\\n                        <input formControlName=\\\"ReleaseDateFrom\\\" matInput [matDatepicker]=\\\"picker2\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker2 disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"inline-date\\\">\\n                    <mat-form-field>\\n                        <mat-label>Enter date to</mat-label>\\n                        <input formControlName=\\\"ReleaseDateTo\\\" matInput [matDatepicker]=\\\"picker3\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"text-center\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"bookFilterForm.invalid\\\" class=\\\"btn btn-outline-primary\\\">Apply\\n                    filters</button>\\n\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\\n\\n\\n\\n<mat-table class=\\\"mat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"bookId\\\">\\n        <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.book.bookId}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"title\\\">\\n        <mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\\n        <mat-cell class=\\\"description-cell\\\" *matCellDef=\\\"let element\\\">{{element.book.title}}</mat-cell>\\n\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"releaseDate\\\">\\n        <mat-header-cell *matHeaderCellDef>Release date</mat-header-cell>\\n        <mat-cell class=\\\"duration-cell\\\" *matCellDef=\\\"let element\\\">{{element.book.releaseDate.substr(0,4)}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"totalCount\\\">\\n        <mat-header-cell *matHeaderCellDef>Count</mat-header-cell>\\n        <mat-cell class=\\\"duration-cell\\\" *matCellDef=\\\"let element\\\">{{element.book.availableCount}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container  matColumnDef=\\\"authors\\\">\\n        <mat-header-cell *matHeaderCellDef>Authors</mat-header-cell>\\n        <mat-cell  class=\\\"duration-cell  authors-cell-wrapper\\\" *matCellDef=\\\"let element\\\">\\n            <ng-container *ngFor=\\\"let author of element.authors\\\">\\n                <div class=\\\"authorParagraph\\\" >{{\\\" \\\"+ author.firstName.substr(0,1) + \\\". \\\" + author.lastName + \\\"\\\\n\\\"}}\\n                </div>\\n            </ng-container>\\n            \\n            \\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n            <button [disabled]=\\\"row.book.availableCount<1\\\"  (click)=\\\"borrowBook(row.book.bookId)\\\" mat-icon-button matTooltip=\\\"Click to Borrow\\\"\\n                class=\\\"iconbutton\\\" color=\\\"dark\\\">\\n                <mat-icon aria-label=\\\"import_contacts\\\">import_contacts</mat-icon>\\n            </button>\\n            <a *ngIf=\\\"isAdmin\\\" [routerLink]=\\\"'/book-form/'+row.book.bookId\\\" mat-icon-button matTooltip=\\\"Click to Edit\\\"\\n                class=\\\"iconbutton\\\" color=\\\"primary\\\">\\n                <mat-icon aria-label=\\\"edit\\\">edit</mat-icon>\\n            </a>\\n            <button *ngIf=\\\"isAdmin\\\" (click)=\\\"deleteBook(row.book.bookId)\\\" mat-icon-button matTooltip=\\\"Click to Delete\\\"\\n                class=\\\"iconbutton\\\" color=\\\"warn\\\">\\n                <mat-icon aria-label=\\\"delete\\\">delete</mat-icon>\\n            </button>\\n        </td>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n\\n</mat-table>\\n\\n<mat-paginator [length]=\\\"bookCount\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"onPageChanged($event,target)\\\" [hidePageSize]=\\\"true\\\">\\n</mat-paginator>\";","export default \"<div>\\n    <a [routerLink]=\\\"['/books']\\\" class=\\\"btn btn-outline-secondary\\\" >Back to panel</a>\\n</div>\\n<hr/>\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let book of borrowedBooks\\\" class=\\\"col-lg-4 col-md-6 d-flex align-items-stretch\\\">\\n        <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{book.book.title}}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{book.book.releaseDate.substr(0,4)}}</h6>\\n                <p *ngFor=\\\"let author of book.authors\\\" class=\\\"card-text\\\">\\n                    {{author.firstName.substr(0,1) + \\\". \\\" + author.lastName}}</p>\\n                <button (click)=\\\"returnBook(book.book.bookId)\\\" id=\\\"card-btn\\\" mat-icon-button matTooltip=\\\"Click to Return\\\" class=\\\"iconbutton \\\" color=\\\"warn\\\"\\n                    class=\\\"card-link\\\">Return book\\n                    <mat-icon aria-label=\\\"exit_to_app\\\">exit_to_app</mat-icon>\\n                </button>\\n                \\n            </div>\\n        </div>\\n    </div>\\n \\n\\n</div>\\n<div *ngIf=\\\"borrowedBooks?.length <= 0\\\">\\n    <p><strong>You don't have any borrowed books</strong></p>\\n</div>\";","export default \"<div class=\\\"text-center\\\">\\n    <h1>Library App</h1>\\n    <span class=\\\"material-icons library-icon\\\">\\n        local_library\\n        </span>\\n</div>\\n\\n\";","export default \"<div class=\\\"row form-wrapper\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-12\\\">\\r\\n      <div class=\\\"mb-3 card mx-auto\\\">\\r\\n          <div class=\\\"card-header-tab card-header \\\">\\r\\n              <div class=\\\"text-center\\\">\\r\\n                  <span class=\\\"text-center\\\">Login</span>\\r\\n              </div>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <mat-label>Enter Login</mat-label>\\r\\n                  <input matInput placeholder=\\\"ExampleUsername\\\" formControlName=\\\"userName\\\">\\r\\n                  <mat-error *ngIf=\\\"userName.invalid\\\">Login is required</mat-error>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field appearance=\\\"fill\\\">\\r\\n                  <mat-label>Enter password</mat-label>\\r\\n                  <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\r\\n                  <mat-error *ngIf=\\\"password.invalid\\\">Password is required</mat-error>\\r\\n              </mat-form-field>\\r\\n \\r\\n              <div class=\\\"text-center\\\">\\r\\n                  <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\"\\r\\n                      class=\\\"btn btn-outline-primary\\\">Login</button>\\r\\n              </div>\\r\\n          </form>\\r\\n          <div class=\\\"google-wrapper\\\">\\r\\n            <button class=\\\"btn btn-outline-danger\\\" (click)=\\\"signInWithGoogle()\\\"><span><fa-icon [icon]=\\\"gmailIcon\\\"></fa-icon></span></button>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<header>\\n  <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">LibraryApp</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\"\\n        aria-label=\\\"Toggle navigation\\\" [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]=\\\"{ show: isExpanded }\\\">\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\n          \\n          <li *ngIf=\\\"authService.isAdmin()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a  class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/authors']\\\">Authors</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/books']\\\">Books</a>\\n          </li>\\n          <li *ngIf=\\\"authService.isAdmin()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/users']\\\">Users</a>\\n          </li>\\n          <li *ngIf=\\\"!authService.isAuthenticated()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n          </li>\\n          <li *ngIf=\\\"!authService.isAuthenticated()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n          </li>\\n          <li *ngIf=\\\"authService.isAuthenticated()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <button class=\\\"btn btn-link nav-link text-dark\\\" (click)=\\\"logout()\\\">Logout</button>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\";","export default \"<div class=\\\"row form-wrapper\\\">\\n    <div class=\\\"col-lg-6 col-md-8 col-sm-12\\\">\\n        <div class=\\\"mb-3 card mx-auto\\\">\\n            <div class=\\\"card-header-tab card-header \\\">\\n                <div class=\\\"text-center\\\">\\n                    <span class=\\\"text-center\\\">Rejestracja</span>\\n                </div>\\n            </div>\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n    \\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter username</mat-label>\\n                    <input matInput placeholder=\\\"UserName23\\\" formControlName=\\\"userName\\\">\\n                    <mat-error *ngIf=\\\"userName.invalid\\\">Username is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter email</mat-label>\\n                    <input matInput placeholder=\\\"example@gmail.com\\\" formControlName=\\\"email\\\">\\n                    <mat-error *ngIf=\\\"email.invalid\\\">Email is required</mat-error>\\n                    <mat-error *ngIf=\\\"email.errors?.email\\\">Not correct form of email</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter password</mat-label>\\n                    <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\n                    <mat-error *ngIf=\\\"registerForm.hasError('required','password')\\\">Password is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter password confirmation</mat-label>\\n                    <input type=\\\"password\\\" matInput formControlName=\\\"confirmPassword\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error *ngIf=\\\"confirmPassword.invalid\\\">Password confirmation is required</mat-error>\\n                    <mat-error *ngIf=\\\"registerForm.hasError('notSame')\\\">Passwords not the same</mat-error>\\n\\n                </mat-form-field>\\n    \\n    \\n                <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\"\\n                        class=\\\"btn btn-outline-primary\\\">Register</button>\\n    \\n                </div>\\n            </form>\\n    \\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"row form-wrapper\\\">\\n    <div class=\\\"col-lg-6 col-md-8 col-sm-12\\\">\\n        <div class=\\\"mb-3 card mx-auto\\\">\\n            <div class=\\\"card-header-tab card-header \\\">\\n                <div>\\n                    <a [routerLink]=\\\"['/users']\\\" class=\\\"btn btn-outline-secondary\\\" >Back to panel</a>\\n                </div>\\n                <div class=\\\"text-center\\\">\\n                    <span class=\\\"text-center\\\">Create user</span>\\n                </div>\\n            </div>\\n            <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"addUser()\\\">\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter username</mat-label>\\n                    <input matInput placeholder=\\\"UserName23\\\" formControlName=\\\"userName\\\">\\n                    <mat-error *ngIf=\\\"userName.invalid\\\">Username is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter email</mat-label>\\n                    <input matInput placeholder=\\\"example@gmail.com\\\" formControlName=\\\"email\\\">\\n                    <mat-error *ngIf=\\\"email.invalid\\\">Email is required</mat-error>\\n                    <mat-error *ngIf=\\\"email.errors?.email\\\">Not correct form of email</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter password</mat-label>\\n                    <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\n                    <mat-error *ngIf=\\\"userForm.hasError('required','password')\\\">Password is required</mat-error>\\n                </mat-form-field>\\n                <mat-form-field appearance=\\\"fill\\\">\\n                    <mat-label>Enter password confirmation</mat-label>\\n                    <input type=\\\"password\\\" matInput formControlName=\\\"confirmPassword\\\" [errorStateMatcher]=\\\"matcher\\\">\\n                    <mat-error *ngIf=\\\"confirmPassword.invalid\\\">Password confirmation is required</mat-error>\\n                    <mat-error *ngIf=\\\"userForm.hasError('notSame')\\\">Passwords not the same</mat-error>\\n\\n                </mat-form-field>\\n    \\n    \\n                <div class=\\\"text-center\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\"\\n                        class=\\\"btn btn-outline-primary\\\">Create</button>\\n    \\n                </div>\\n            </form>\\n    \\n        </div>\\n    </div>\\n</div>\";","export default \"<div>\\n  <a [routerLink]=\\\"['/user-form']\\\" class=\\\"btn btn-outline-primary\\\">Create user</a>\\n</div>\\n\\n<div class=\\\"row form-wrapper\\\">\\n  <div class=\\\"mb-3 card .mx-auto\\\">\\n    <form [formGroup]=\\\"userFilterForm\\\" (ngSubmit)=\\\"applyFilters()\\\">\\n\\n      <mat-form-field class=\\\"example-full-width text-center\\\">\\n        <mat-label>Search by username</mat-label>\\n        <input matInput formControlName=\\\"UserName\\\" placeholder=\\\"Ex. Stephen98\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width text-center\\\">\\n        <mat-label>Search by email</mat-label>\\n        <input matInput formControlName=\\\"Email\\\" placeholder=\\\"Ex. Stephen98@gmail.com\\\">\\n      </mat-form-field>\\n\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"userFilterForm.invalid\\\" class=\\\"btn btn-outline-primary\\\">Apply filters</button>\\n\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n<mat-table class=\\\"lessons-table mat-elevation-z8\\\" [dataSource]=\\\"dataSource\\\">\\n\\n  <ng-container matColumnDef=\\\"userId\\\">\\n    <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.userId}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"userName\\\">\\n    <mat-header-cell *matHeaderCellDef>Username</mat-header-cell>\\n    <mat-cell class=\\\"description-cell\\\" *matCellDef=\\\"let element\\\">{{element.userName}}</mat-cell>\\n\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"email\\\">\\n    <mat-header-cell *matHeaderCellDef>Email</mat-header-cell>\\n    <mat-cell class=\\\"duration-cell\\\" *matCellDef=\\\"let element\\\">{{element.email}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <button (click)=\\\"deleteUser(row.userId)\\\" mat-icon-button matTooltip=\\\"Click to Delete\\\" class=\\\"iconbutton\\\"\\n        color=\\\"warn\\\">\\n        <mat-icon aria-label=\\\"Usuń\\\">delete</mat-icon>\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n\\n</mat-table>\\n\\n<mat-paginator #paginator [length]=\\\"usersCount\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"onPageChanged($event,target)\\\" [hidePageSize]=\\\"true\\\">\\n</mat-paginator>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UsersPanelComponent } from './users-panel/users-panel.component';\nimport { BooksComponent } from './books/books.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { AuthorFormComponent } from './author-form/author-form.component';\nimport { BookFormComponent } from './book-form/book-form.component';\nimport { BorrowedBooksComponent } from './borrowed-books/borrowed-books.component';\nimport { AdminGuardService } from './services/admin-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path:'login', component: LoginComponent},\n  { path:'register', component: RegisterComponent},\n  { path: 'user-form', component: UserFormComponent, canActivate: [AdminGuardService]}, //ADMIN\n  { path: 'users', component: UsersPanelComponent, canActivate: [AdminGuardService]}, //ADMIN\n  { path: 'authors', component: AuthorsComponent, canActivate: [AdminGuardService]}, // ADMIN\n  { path: 'author-form', component: AuthorFormComponent, canActivate: [AdminGuardService]}, // ADMIN\n  { path: 'books', component: BooksComponent, canActivate: [AuthGuardService]}, // USER\n  { path: 'book-form', component: BookFormComponent, canActivate: [AdminGuardService]}, // ADMIN\n  { path: 'book-form/:id', component: BookFormComponent, canActivate: [AdminGuardService]}, // ADMIN\n  { path: 'my-books/:id', component: BorrowedBooksComponent, canActivate: [AuthGuardService]}, // USER\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LibraryApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './services/auth.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BookService } from './services/book.service';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { UsersPanelComponent } from './users-panel/users-panel.component';\r\nimport { BooksComponent } from './books/books.component';\r\nimport { AuthorsComponent } from './authors/authors.component';\r\nimport { AuthorFormComponent } from './author-form/author-form.component';\r\nimport { BookFormComponent } from './book-form/book-form.component';\r\nimport { BorrowedBooksComponent } from './borrowed-books/borrowed-books.component';\r\nimport { AuthServiceConfig, SocialLoginModule } from \"angularx-social-login\";\r\nimport { GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nconst config = new AuthServiceConfig([\r\n  {\r\n    id: GoogleLoginProvider.PROVIDER_ID,\r\n    provider: new GoogleLoginProvider('552114392257-907113igfs7j5vr7p5ql7kk6ofjcgcab.apps.googleusercontent.com')\r\n  }\r\n]);\r\nexport function provideConfig() {\r\n  return config;\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    UserFormComponent,\r\n    UsersPanelComponent,\r\n    BooksComponent,\r\n    AuthorsComponent,\r\n    AuthorFormComponent,\r\n    BookFormComponent,\r\n    BorrowedBooksComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    SocialLoginModule,\r\n    FontAwesomeModule\r\n\r\n  ],\r\n  providers: [AuthService,\r\n    BookService,\r\n    AuthGuardService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      // option for another interceptors\r\n      multi: true\r\n    },\r\n    {\r\n      provide: AuthServiceConfig,\r\n      useFactory: provideConfig\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aG9yLWZvcm0vYXV0aG9yLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGtDQUFrQztBQUN0QyIsImZpbGUiOiJzcmMvYXBwL2F1dGhvci1mb3JtL2F1dGhvci1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luOiAxZW07XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4uZm9ybS13cmFwcGVye1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MyErrorStateMatcher } from '../register/register.component';\nimport { AuthorService } from '../services/author.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-author-form',\n  templateUrl: './author-form.component.html',\n  styleUrls: ['./author-form.component.css']\n})\nexport class AuthorFormComponent implements OnInit {\n\n  authorForm: FormGroup;\n  constructor(\n    private fb: FormBuilder, \n    private authorService:AuthorService,\n    private snackBar:MatSnackBar) { }\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n    this.authorForm = this.fb.group({\n      firstName: ['',[\n        Validators.required\n      ]],\n      lastName: ['',[\n        Validators.required\n        \n      ]]\n    });\n  }\n\n  get firstName() {\n    return this.authorForm.get('firstName');\n  }\n  get lastName() {\n    return this.authorForm.get('lastName');\n  }\n\n\n  addAuthor(){\n    this.authorService.addAuthor(this.authorForm.value)\n    .subscribe(data => {\n      if(data['status']===1){\n        this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n      }else{\n        this.openSnackBar('Author added successfully', 'Close', 'green-snackbar')\n      }\n    });\n  }\n\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ntd.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\r\\n    padding: 0;\\r\\n    border-bottom-width: 1px;\\r\\n    border-bottom-style: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aG9ycy9hdXRob3JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFVBQVU7SUFDVix3QkFBd0I7SUFDeEIseUJBQXlCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvYXV0aG9ycy9hdXRob3JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG50ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcclxuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { IAuthorViewModel } from '../ClientViewModels/IAuthorViewModel';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthorService } from '../services/author.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\nexport class AuthorsComponent implements OnInit {\n  displayedColumns = [\"authorId\", \"firstName\", \"lastName\", \"actions\"];\n  authors: IAuthorViewModel[];\n  authorsCount: number;\n  dataSource: MatTableDataSource<IAuthorViewModel>;\n  activePageDataChunk:Array<IAuthorViewModel> = [];\n  pageSize:number = 5;\n\n  constructor(private authorService:AuthorService, public snackBar: MatSnackBar) { }\n\n\n  ngOnInit() {\n    this.authorService.getAuthors()\n    .subscribe(data => {\n      this.authors = data;\n      this.authorsCount = data.length;\n      this.activePageDataChunk = data.slice(0,this.pageSize);\n      this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n\n    });\n  }\n  onPageChanged(e) {\n    let firstCut = e.pageIndex * e.pageSize;\n    let secondCut = firstCut + e.pageSize;\n    this.activePageDataChunk = this.authors.slice(firstCut, secondCut);\n    this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n  }\n  applyFilter(event: Event) {\n    this.dataSource = new MatTableDataSource(this.authors);\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n  }\n\n  deleteAuthor(authorId){\n    this.authorService.deleteAuthor(authorId.toString())\n    .subscribe(data => {\n      if(data['status']===1){\n        this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n      }else{\n        this.openSnackBar('Author deleted successfully', 'Close', 'green-snackbar')\n \n        var filteredList: IAuthorViewModel[] = this.authors.filter(a => a.authorId !== authorId);\n        this.authors = filteredList;\n        this.authorsCount = this.authors.length;\n    \n        this.dataSource = new MatTableDataSource(this.authors.slice(0,this.pageSize));\n      }\n    });\n\n\n  }\n\n   \n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1mb3JtL2Jvb2stZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsa0JBQWtCO0VBQ3BCOztBQUVGO0lBQ0ksa0NBQWtDO0FBQ3RDIiwiZmlsZSI6InNyYy9hcHAvYm9vay1mb3JtL2Jvb2stZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1hcmdpbjogMWVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuLmZvcm0td3JhcHBlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MyErrorStateMatcher } from '../register/register.component';\nimport { AuthorService } from '../services/author.service';\nimport { IAuthorViewModel } from '../ClientViewModels/IAuthorViewModel';\nimport { IBookViewModel } from '../ClientViewModels/IBookViewModel';\nimport { BookService } from '../services/book.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IBookAuthorViewModel } from '../ClientViewModels/IBookAuthorViewModel';\nimport { ThrowStmt } from '@angular/compiler';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-book-form',\n  templateUrl: './book-form.component.html',\n  styleUrls: ['./book-form.component.css']\n})\nexport class BookFormComponent implements OnInit {\n  bookForm: FormGroup;\n  bookId: number;\n  book: IBookAuthorViewModel;\n  authorList: IAuthorViewModel[];\n  actionText:string = \"Create\";\n  constructor(private fb: FormBuilder, \n    private authorService: AuthorService, \n    private bookService: BookService, \n    private route: ActivatedRoute, \n    private router: Router,\n    public snackBar: MatSnackBar) {\n    route.params.subscribe(p => {\n      //+before p converts id to a number\n      this.bookId = +p['id'] || null;\n\n    });\n  }\n  \n  ngOnInit() {\n    this.bookForm = this.fb.group({\n      title: ['', [\n        Validators.required\n      ]],\n      releaseDate: ['', [\n        Validators.required\n      ]],\n      totalCount: ['', [\n        Validators.required,\n\n\n      ]],\n      authors: ['', [\n        Validators.required\n      ]]\n    });\n\n    this.authorService.getAuthors()\n      .subscribe(data => this.authorList = data);\n\n    if (this.bookId) {\n      this.actionText = \"Update\"\n      this.bookService.getBook(this.bookId)\n        .subscribe(data => {\n          this.book = {\n            book: {\n              bookId: null,\n              title: '',\n              releaseDate: null,\n              totalCount: null\n            },\n            authors: []\n          };\n          this.book = data;\n\n          // populate form\n          this.bookForm.controls.title.setValue(this.book.book.title);\n          this.bookForm.controls.releaseDate.setValue(this.book.book.releaseDate);\n          this.bookForm.controls.totalCount.setValue(this.book.book.totalCount);\n\n\n          // populate dropdown\n          const selectedAuthors = this.book.authors.map(aut => aut.firstName);\n          this.bookForm.controls.authors.setValue(selectedAuthors);\n\n\n  \n\n\n        });\n    }\n  }\n\n  get title() {\n    return this.bookForm.get('title');\n  }\n  get releaseDate() {\n    return this.bookForm.get('releaseDate');\n  }\n\n  get totalCount() {\n    return this.bookForm.get('totalCount');\n  }\n\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n  addBook() {\n    // convert categories, vods dropdownlist value to proper object and set to form value\n    const authList = this.bookForm.controls.authors.value.map(el => {\n      return this.authorList.find(x => x.firstName === el)\n    });\n    this.bookForm.controls.authors.setValue(authList);\n\n    const book: IBookViewModel = {\n      bookId: 0,\n      title: this.bookForm.controls[\"title\"].value,\n      releaseDate: this.bookForm.controls[\"releaseDate\"].value,\n      totalCount: parseInt(this.bookForm.controls[\"totalCount\"].value)\n    };\n\n    if (this.bookId) {\n      // delete authors from book\n      this.book.authors.map(el => {\n\n        this.bookService.deleteAuthorFromBook(el.authorId, this.bookId)\n          .subscribe(data => {});\n  \n      });\n      // update book and authors\n      book.bookId = this.bookId;\n      this.bookService.updateBook(book)\n        .subscribe(data => {\n          authList.map(el => {\n            this.bookService.addAuthorToBook(el.authorId, data[\"id\"])\n            .subscribe(data => this.book.authors = authList)\n          });\n          if(data['status']===1){\n            this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n          }else{\n            this.openSnackBar('Book updated', 'Close', 'green-snackbar')\n          }\n\n        });\n    }\n    else {\n      // add book\n      this.bookService.createBook(book).subscribe(data => {\n        authList.map(el => {\n          this.bookService.addAuthorToBook(el.authorId, data[\"id\"])\n            .subscribe(data => {\n              if(data['status']===1){\n                this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n              }else{\n                this.openSnackBar('Book created', 'Close', 'green-snackbar')\n              }\n            })\n        });\n      });\n    }\n\n\n    // populate dropdown lists back \n    const selectedAuthors = authList.map(auth => auth.firstName);\n    this.bookForm.controls.authors.setValue(selectedAuthors);\n\n    // populate book authors again\n    this.book.authors = authList;\n\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n\\r\\ntd.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\r\\n    padding: 0;\\r\\n    border-bottom-width: 1px;\\r\\n    border-bottom-style: none;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    margin-top: 30px;\\r\\n    margin-bottom: 40px;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 0;\\r\\n    padding: 10px;\\r\\n    word-wrap: break-word;\\r\\n    background-color: #fff;\\r\\n    background-clip: border-box;\\r\\n    border: 2px solid rgb(94, 49, 144);\\r\\n    border-radius: .25rem;\\r\\n    box-shadow: 0 8px 2px var(--shadow-2);\\r\\n  }\\r\\n\\r\\n.card-header:first-child {\\r\\n    border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;\\r\\n  }\\r\\n\\r\\n.inline-date{\\r\\n      display: inline-block;\\r\\n  }\\r\\n\\r\\n.inl-wrapper{\\r\\n    justify-content: center !important;\\r\\n  }\\r\\n\\r\\n.left{\\r\\n    float: left;\\r\\n  }\\r\\n\\r\\n.right{\\r\\n    float: right;\\r\\n  }\\r\\n\\r\\n.authorParagraph{\\r\\n    letter-spacing: 1px;\\r\\n    padding: 0.1rem;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va3MvYm9va3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGtDQUFrQztBQUN0Qzs7QUFDQTtJQUNJLFVBQVU7SUFDVix3QkFBd0I7SUFDeEIseUJBQXlCO0FBQzdCOztBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUVsQixhQUFhO0lBR2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0Isa0NBQWtDO0lBQ2xDLHFCQUFxQjtJQUNyQixxQ0FBcUM7RUFDdkM7O0FBRUE7SUFDRSx3REFBd0Q7RUFDMUQ7O0FBRUE7TUFDSSxxQkFBcUI7RUFDekI7O0FBQ0E7SUFDRSxrQ0FBa0M7RUFDcEM7O0FBRUE7SUFDRSxXQUFXO0VBQ2I7O0FBRUE7SUFDRSxZQUFZO0VBQ2Q7O0FBRUE7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtFQUNqQiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2Jvb2tzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luOiAxZW07XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4uZm9ybS13cmFwcGVye1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcclxufVxyXG50ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcclxuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XHJcbn1cclxuLmNhcmQge1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtaW4td2lkdGg6IDA7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYig5NCwgNDksIDE0NCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XHJcbiAgICBib3gtc2hhZG93OiAwIDhweCAycHggdmFyKC0tc2hhZG93LTIpO1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1oZWFkZXI6Zmlyc3QtY2hpbGQge1xyXG4gICAgYm9yZGVyLXJhZGl1czogY2FsYyguMjVyZW0gLSAxcHgpIGNhbGMoLjI1cmVtIC0gMXB4KSAwIDA7XHJcbiAgfVxyXG5cclxuICAuaW5saW5lLWRhdGV7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgLmlubC13cmFwcGVye1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC5sZWZ0e1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgfVxyXG5cclxuICAucmlnaHR7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG4gXHJcbiAgLmF1dGhvclBhcmFncmFwaHtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICBwYWRkaW5nOiAwLjFyZW07XHJcbiAgfSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { IBookViewModel } from '../ClientViewModels/IBookViewModel';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BookService } from '../services/book.service';\nimport { IBookAuthorViewModel } from '../ClientViewModels/IBookAuthorViewModel';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthorService } from '../services/author.service';\nimport { IAuthorViewModel } from '../ClientViewModels/IAuthorViewModel';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n  displayedColumns = [\"bookId\", \"title\", \"releaseDate\", \"totalCount\", \"authors\", \"actions\"];\n  books: IBookAuthorViewModel[];\n  bookFilterForm: FormGroup;\n  bookCount: number;\n  dataSource: MatTableDataSource<IBookAuthorViewModel>;\n  activePageDataChunk: Array<IBookAuthorViewModel> = [];\n  pageSize: number = 5;\n  authorList: IAuthorViewModel[];\n  userId:string;\n  isAdmin:boolean;\n  constructor(private authService: AuthService, \n    private bookService: BookService, \n    private fb: FormBuilder, \n    private authorService: AuthorService,\n    private router: Router,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.bookFilterForm = this.fb.group({\n      Title: ['', [\n\n      ]],\n      ReleaseDate: ['', [\n      ]],\n      ReleaseDateFrom: ['', [\n\n      ]],\n      ReleaseDateTo: ['', [\n      ]],\n      authors: ['', [\n\n      ]],\n    });\n    this.bookService.getBooks()\n      .subscribe(data => {\n        this.books = data;\n        this.bookCount = data.length;\n        this.activePageDataChunk = data.slice(0, this.pageSize);\n        this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n\n      });\n\n    this.authorService.getAuthors()\n      .subscribe(data => this.authorList = data);\n\n    this.authService.getUserInfo()\n      .subscribe(data => {\n        localStorage.setItem('id', data[\"sub\"]);\n        this.userId = data[\"sub\"];\n      });\n    this.isAdmin = this.authService.isAdmin();\n\n    \n  }\n  onPageChanged(e) {\n    let firstCut = e.pageIndex * e.pageSize;\n    let secondCut = firstCut + e.pageSize;\n    this.activePageDataChunk = this.books.slice(firstCut, secondCut);\n    this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n  }\n\n\n  deleteBook(bookId) {\n    this.bookService.deleteBook(bookId)\n      .subscribe(data => {\n        if(data['status']===1){\n          this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n        }else{\n          this.openSnackBar('Book deleted successfully', 'Close', 'green-snackbar')\n          var filteredList: IBookAuthorViewModel[] = this.books.filter(book => book.book.bookId !== bookId);\n          this.books = filteredList;\n          this.bookCount = this.books.length;\n      \n          this.dataSource = new MatTableDataSource(this.books.slice(0, this.pageSize));\n        }\n      });\n\n\n\n  }\n\n  applyFilters() {\n    var filterObj = {};\n    if (this.bookFilterForm.controls[\"Title\"].value) {\n      filterObj[\"Title\"] = this.bookFilterForm.controls[\"Title\"].value;\n\n    }\n    if (this.bookFilterForm.controls[\"ReleaseDate\"].value) {\n      var dateStrToSendToServer = new Date(this.bookFilterForm.controls[\"ReleaseDate\"].value)\n      filterObj[\"ReleaseDate\"] = dateStrToSendToServer.toISOString();\n    }\n\n\n    if (this.bookFilterForm.controls[\"ReleaseDateFrom\"].value) {\n      var dateStrToSendToServer = new Date(this.bookFilterForm.controls[\"ReleaseDateFrom\"].value)\n      filterObj[\"ReleaseDateFrom\"] = dateStrToSendToServer.toISOString();\n\n    }\n    if (this.bookFilterForm.controls[\"ReleaseDateTo\"].value) {\n      var dateStrToSendToServer = new Date(this.bookFilterForm.controls[\"ReleaseDateTo\"].value)\n      filterObj[\"ReleaseDateTo\"] = dateStrToSendToServer.toISOString();\n\n    }\n    if (this.bookFilterForm.controls[\"authors\"].value) {\n      filterObj[\"authorIds\"] = this.bookFilterForm.controls[\"authors\"].value;\n\n    }\n    this.bookService.getBookFilter(filterObj)\n      .subscribe(data => {\n        this.books = data;\n        this.bookCount = data.length;\n        this.activePageDataChunk = data.slice(0, this.pageSize);\n        this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n      });\n\n  }\n\n  borrowBook(bookId: number) {\n    const userId = localStorage.getItem(\"id\");\n    this.bookService.borrowBook(userId, bookId)\n    .subscribe(data=>{\n      if(data['status']===1){\n        this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n      }else{\n        this.openSnackBar('Book borrowed', 'Close', 'green-snackbar')\n        this.router.navigate(['/my-books/'+userId]);\n      }\n      \n     \n    },error =>{\n      this.openSnackBar(\"Error\", 'Close', 'red-snackbar')\n    });\n\n    \n  }\n\n  \n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n}\n","export default \".card{\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n#card-btn{\\r\\n    position: absolute;\\r\\n    bottom:   0;\\r\\n}\\r\\n.card-body{\\r\\n    position: relative;\\r\\n    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9ycm93ZWQtYm9va3MvYm9ycm93ZWQtYm9va3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksa0JBQWtCOztBQUV0QiIsImZpbGUiOiJzcmMvYXBwL2JvcnJvd2VkLWJvb2tzL2JvcnJvd2VkLWJvb2tzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuI2NhcmQtYnRue1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAgIDA7XHJcbn1cclxuLmNhcmQtYm9keXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIFxyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { IBookViewModel } from '../ClientViewModels/IBookViewModel';\nimport { BookService } from '../services/book.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IBookAuthorViewModel } from '../ClientViewModels/IBookAuthorViewModel';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-borrowed-books',\n  templateUrl: './borrowed-books.component.html',\n  styleUrls: ['./borrowed-books.component.css']\n})\nexport class BorrowedBooksComponent implements OnInit {\n\n  borrowedBooks: IBookAuthorViewModel[];\n  userId: string;\n  constructor(private bookService: BookService, private route: ActivatedRoute, private router: Router, public snackBar:MatSnackBar) {\n    route.params.subscribe(p => {\n      //+before p converts id to a number\n      this.userId = p['id'] || null;\n\n    });\n  }\n\n  ngOnInit() {\n    this.borrowedBooks = [];\n    this.bookService.getBorrowedBooks(this.userId)\n      .subscribe(data => {\n        this.borrowedBooks = data;\n      });\n  }\n\n  returnBook(bookId: number) {\n    const userId = localStorage.getItem(\"id\");\n    this.bookService.returnBook(userId, bookId)\n      .subscribe(data => {\n        var filteredList: IBookAuthorViewModel[] = this.borrowedBooks.filter(book => book.book.bookId !== bookId);\n        this.borrowedBooks = filteredList;\n\n        this.openSnackBar(\"Book returned\", 'Close', 'green-snackbar')\n      },error =>{\n        this.openSnackBar(\"Error\", 'Close', 'red-snackbar')\n      });\n\n\n  }\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n  \n\n\n}\n","export default \".library-icon{\\r\\n    font-size: 30rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saWJyYXJ5LWljb257XHJcbiAgICBmb250LXNpemU6IDMwcmVtO1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n\\r\\n.google-wrapper{\\r\\n  margin: auto;\\r\\n  padding: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGtDQUFrQztBQUN0Qzs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1hcmdpbjogMWVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuLmZvcm0td3JhcHBlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5nb29nbGUtd3JhcHBlcntcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMjBweDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService as socialAuthService } from 'angularx-social-login';\r\nimport { SocialUser } from 'angularx-social-login';\r\nimport { GoogleLoginProvider } from 'angularx-social-login';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  userId: string;\r\n  gmailIcon = faGoogle;\r\n\r\n  constructor(private fb: FormBuilder, \r\n    private authService: AuthService, \r\n    private router: Router, \r\n    public snackBar: MatSnackBar,\r\n    private socialAuthService: socialAuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      userName: ['', [\r\n        Validators.required\r\n      ]],\r\n      password: ['', [\r\n        Validators.required\r\n\r\n      ]]\r\n    });\r\n\r\n  }\r\n\r\n  get userName() {\r\n    return this.loginForm.get('userName');\r\n  }\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.loginForm.value)\r\n      .subscribe(data => {\r\n        this.authService.saveToken(data.access_token);\r\n        this.authService.getUserInfo()\r\n          .subscribe(data => {\r\n            this.authService.getUserRole(data[\"sub\"])\r\n              .subscribe(role => {\r\n                this.authService.saveRole(role[\"message\"]);\r\n              });\r\n          })\r\n\r\n          this.openSnackBar('Logged In!', 'Close', 'green-snackbar')\r\n          this.router.navigate([\"books\"]);\r\n      }, error =>{\r\n        this.openSnackBar(error.error[\"error_description\"], 'Close', 'red-snackbar')\r\n      });     \r\n\r\n  }\r\n\r\n  signInWithGoogle(): void {\r\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(x => {\r\n        this.authService.getIdentityServerToken(x['idToken'])\r\n        .subscribe(identityToken =>{\r\n          this.authService.saveToken(identityToken);\r\n          this.authService.getUserInfo()\r\n            .subscribe(data => {\r\n              this.authService.getUserRole(data[\"sub\"])\r\n                .subscribe(role => {\r\n                  this.authService.saveRole(role[\"message\"]);\r\n                });\r\n            })\r\n  \r\n            this.openSnackBar('Logged In!', 'Close', 'green-snackbar')\r\n            this.router.navigate([\"books\"]);\r\n        }, error =>{\r\n          this.openSnackBar(error.error[\"error_description\"], 'Close', 'red-snackbar')\r\n        });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  openSnackBar(message: string, action: string, className: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n      panelClass: [className]\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"a.navbar-brand {\\r\\n    white-space: normal;\\r\\n    text-align: center;\\r\\n    word-break: break-all;\\r\\n  }\\r\\n  \\r\\n  html {\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 768px) {\\r\\n    html {\\r\\n      font-size: 16px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .box-shadow {\\r\\n    box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0UsZUFBZTtFQUNqQjs7RUFDQTtJQUNFO01BQ0UsZUFBZTtJQUNqQjtFQUNGOztFQUVBO0lBQ0UsOENBQThDO0VBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbiAgfVxyXG4gIFxyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gIH1cclxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgIGh0bWwge1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC5ib3gtc2hhZG93IHtcclxuICAgIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbiAgfSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n\n  isExpanded = false;\n  constructor(private authService:AuthService, private router:Router){}\n\n \n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  logout(){\n    this.authService.logout();\n    this.router.navigate([\"\"]);\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGtDQUFrQztBQUN0QyIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gICAgbWFyZ2luOiAxZW07XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4uZm9ybS13cmFwcGVye1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder, private authService:AuthService, private router:Router, public snackBar:MatSnackBar) { }\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      userName:['', [\n        Validators.required\n      ]],\n      email: ['',[\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['',[\n        Validators.required\n        \n      ]],\n      confirmPassword: [''],\n    }, {validators: this.checkPasswords});\n  }\n\n  get userName() {\n    return this.registerForm.get('userName');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n\n  register(){\n    this.authService.register(this.registerForm.value)\n    .subscribe(data => {\n      this.openSnackBar('User Created!', 'Close', 'green-snackbar')\n    }, error =>{\n      this.openSnackBar(error.error[\"error_description\"], 'Close', 'red-snackbar')\n    });\n\n    this.router.navigate([\"\"]);\n  }\n\n  checkPasswords(group: FormGroup){\n    let password = group.get('password').value;\n    let confirmPassword = group.get('confirmPassword').value;\n\n    return password === confirmPassword ? null : {notSame: true};\n  }\n\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n}\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\n\n    return (invalidCtrl || invalidParent);\n  }\n}","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate():boolean{\n    if(this.authService.isAdmin() && this.authService.isAuthenticated()){\n      return true;\n    }else{\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate():boolean{\n    if(this.authService.isAuthenticated()){\n      return true;\n    }else{\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {environment} from '../../environments/environment'\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private loginPath = environment.apiUrl + 'connect/token';\r\n  private registerPath = environment.apiUrl + 'api/User/AddUser';\r\n  private dataPath = environment.apiUrl + 'connect/userinfo';\r\n  private getUserRolePath = environment.apiUrl + 'api/Role/GetUserRole/';\r\n  private googleTokenPath = environment.apiUrl + 'api/User/ValidateGoogleUser?tokenId=';\r\n  private options = {\r\n    headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\r\n  };\r\n  private corsOptions = {\r\n    headers: new HttpHeaders()\r\n    .set(\"Access-Control-Allow-Origin\", \"*\")\r\n    .set('Access-Control-Allow-Credentials', 'true')\r\n    .set('Access-Control-Allow-Headers', 'append,delete,entries,foreach,get,has,keys,set,values,Authorization')\r\n    .set('Access-Control-Allow-Methods', 'GET, PUT, POST, OPTIONS, DELETE')\r\n\r\n  }\r\n  constructor(private http:HttpClient) { }\r\n\r\n  login(data):Observable<any>{\r\n    let body = new URLSearchParams();\r\n    body.set('client_id','LibraryApp');\r\n    body.set('client_secret','secretsecretsecretsecretsecretsecretsecretsecret');\r\n    body.set('grant_type','password');\r\n    body.set('scope','api1 openid profile email');\r\n    body.set('username',data.userName);\r\n    body.set('password',data.password);\r\n\r\n    return this.http.post(this.loginPath,body.toString(), this.options);\r\n  }\r\n\r\n  getIdentityServerToken(token:string){\r\n    return this.http.get(this.googleTokenPath + token,{responseType: 'text'});\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id');\r\n    localStorage.removeItem('role');\r\n  }\r\n\r\n  isAdmin(){\r\n    if(localStorage.getItem('role') ===\"admin\")\r\n      return true;\r\n    return false;\r\n  }\r\n  getUserInfo(){\r\n    return this.http.get(this.dataPath);\r\n  }\r\n  getUserRole(userId:string){\r\n    return this.http.get(this.getUserRolePath + userId);\r\n  }\r\n  saveRole(role:string){\r\n    localStorage.setItem('role',role);\r\n  }\r\n  register(data): Observable<any>{\r\n    return this.http.post(this.registerPath,data);\r\n  }\r\n\r\n  saveToken(token:string){\r\n    localStorage.setItem('token',token);\r\n  }\r\n\r\n  getToken(){\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  isAuthenticated(){\r\n    if(this.getToken())\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IAuthorViewModel } from '../ClientViewModels/IAuthorViewModel';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n  private authorsPath = environment.apiUrl + 'api/Author/GetAuthors';\n  private deleteAuthorPath = environment.apiUrl + 'api/Author/DeleteAuthor/';\n  private createAuthorPath = environment.apiUrl + 'api/Author/AddAuthor';\n\n  constructor(private http: HttpClient) { }\n\n  getAuthors():Observable<IAuthorViewModel[]>{\n    return this.http.get(this.authorsPath).pipe(map((author: IAuthorViewModel[]) => author));\n\n  }\n\n  addAuthor(author:IAuthorViewModel){\n    return this.http.post(this.createAuthorPath, author);\n  }\n\n  deleteAuthor(authorId){\n    return this.http.delete(this.deleteAuthorPath + authorId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { IBookViewModel } from '../ClientViewModels/IBookViewModel';\nimport { map, filter } from 'rxjs/operators';\nimport { IBookAuthorViewModel } from '../ClientViewModels/IBookAuthorViewModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  private bookPath = environment.apiUrl + 'api/Book/GetBooks';\n  private getBooksParamsPath = environment.apiUrl + 'api/Book/GetBooks?'\n  private deleteBookPath = environment.apiUrl + 'api/Book/DeleteBook/';\n  private createBookPath = environment.apiUrl + 'api/Book/AddBook';\n  private addAuthorToBookPath = environment.apiUrl + 'api/AuthorBook/AddAuthorToBook/'\n  private deleteAuthorFromBookPath = environment.apiUrl + 'api/AuthorBook/DeleteAuthorFromBook/';\n  private getBookPath = environment.apiUrl + 'api/Book/GetBook/';\n  private updateBookPath = environment.apiUrl + 'api/Book/EditBook/';\n  private borrowBookPath = environment.apiUrl + 'api/UserBorrow/BorrowBook/';\n  private getBorrowedBooksPath = environment.apiUrl + 'api/UserBorrow/GetUserBorrowBooks/';\n  private returnBookPath = environment.apiUrl +\"api/UserBorrow/ReturnBook/\";\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  toQueryString(obj) {\n    var parts = [];\n\n    for (var prop in obj) {\n      var value = obj[prop];\n      if (value != null && value != undefined) {\n        if (prop === \"authorIds\") {\n          for (var val of value) {\n\n            parts.push(encodeURIComponent(prop) + '=' + encodeURIComponent(val));\n          }\n\n        } else {\n          parts.push(encodeURIComponent(prop) + '=' + encodeURIComponent(value));\n        }\n      }\n    }\n\n    return parts.join('&');\n  }\n  getBorrowedBooks(userId:string){\n    return this.http.get(this.getBorrowedBooksPath + userId).pipe(map((book: IBookAuthorViewModel[]) => book));\n  }\n  returnBook(userId:string, bookId:number){\n    return this.http.post(this.returnBookPath+ userId + \"/\" +bookId,null);\n  }\n\n  borrowBook(userId:string, bookId:number){\n    return this.http.post(this.borrowBookPath + userId + \"/\" + bookId,null);\n  }\n  createBook(book: IBookViewModel) {\n    return this.http.post(this.createBookPath, book);\n  }\n  addAuthorToBook(authorId, bookId) {\n    return this.http.post(this.addAuthorToBookPath + authorId + \"/\" + bookId, null);\n  }\n\n  getBooks(): Observable<IBookAuthorViewModel[]> {\n\n    return this.http.get(this.bookPath).pipe(map((book: IBookAuthorViewModel[]) => book));\n  }\n  getBookFilter(data) {\n\n    return this.http.get(this.getBooksParamsPath + this.toQueryString(data)).pipe(map((book: IBookAuthorViewModel[]) => book));\n  }\n\n  getBook(bookId) {\n    return this.http.get(this.getBookPath + bookId).pipe(map((book: IBookAuthorViewModel) => book));\n  }\n\n  updateBook(book: IBookViewModel) {\n    return this.http.put(this.updateBookPath + book.bookId, book);\n  }\n\n  deleteBook(bookId) {\n    return this.http.delete(this.deleteBookPath + bookId);\n  }\n  deleteAuthorFromBook(authorId, bookId) {\n    return this.http.post(this.deleteAuthorFromBookPath + authorId + \"/\" + bookId, null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(public auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IUserViewModel } from '../ClientViewModels/IUserVIewModel';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private usersPath = environment.apiUrl + 'api/User/GetUsers';\n  private deleteUserPath = environment.apiUrl + 'api/User/DeleteUser/';\n  private getUsersFilterPath = environment.apiUrl + 'api/User/GetUsers?';\n\n  constructor(private http:HttpClient) { }\n  toQueryString(obj){\n    var parts=[];\n\n    for(var prop in obj){\n      var value = obj[prop];\n      if(value !=null && value !=undefined)\n        parts.push(encodeURIComponent(prop)+ '=' + encodeURIComponent(value));\n    }\n\n    return parts.join('&');\n  }\n  getUsers():Observable<IUserViewModel[]>{\n    return this.http.get(this.usersPath).pipe(map((users: IUserViewModel[]) => users));\n  }\n  getUsersFilter(data) {\n\n    return this.http.get(this.getUsersFilterPath + this.toQueryString(data)).pipe(map((user: IUserViewModel[]) => user));\n  }\n  deleteUser(id:string){\n    return this.http.delete(this.deleteUserPath + id);\n  }\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsa0JBQWtCO0VBQ3BCOztBQUVGO0lBQ0ksa0NBQWtDO0FBQ3RDIiwiZmlsZSI6InNyYy9hcHAvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1hcmdpbjogMWVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuLmZvcm0td3JhcHBlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MyErrorStateMatcher } from '../register/register.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  userForm: FormGroup;\n  constructor(private fb: FormBuilder, private authService:AuthService, public snackBar:MatSnackBar) { }\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      userName:['', [\n        Validators.required\n      ]],\n      email: ['',[\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['',[\n        Validators.required\n        \n      ]],\n      confirmPassword: [''],\n    }, {validators: this.checkPasswords});\n  }\n\n  get userName() {\n    return this.userForm.get('userName');\n  }\n  get email() {\n    return this.userForm.get('email');\n  }\n  get password() {\n    return this.userForm.get('password');\n  }\n  get confirmPassword() {\n    return this.userForm.get('confirmPassword');\n  }\n\n  addUser(){\n    this.authService.register(this.userForm.value)\n    .subscribe(data => {\n      if(data['status']===1){\n        this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n      }else{\n        this.openSnackBar('User added successfully', 'Close', 'green-snackbar')\n      }\n    });\n  }\n\n  checkPasswords(group: FormGroup){\n    let password = group.get('password').value;\n    let confirmPassword = group.get('confirmPassword').value;\n\n    return password === confirmPassword ? null : {notSame: true};\n  }\n\n  \n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n}\n","export default \".mat-form-field {\\r\\n    margin: 1em;\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n.form-wrapper{\\r\\n    justify-content: center !important;\\r\\n}\\r\\n\\r\\ntd.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\r\\n    padding: 0;\\r\\n    border-bottom-width: 1px;\\r\\n    border-bottom-style: none;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    margin-top: 30px;\\r\\n    margin-bottom: 40px;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 0;\\r\\n    padding: 10px;\\r\\n    word-wrap: break-word;\\r\\n    background-color: #fff;\\r\\n    background-clip: border-box;\\r\\n    border: 2px solid rgb(94, 49, 144);\\r\\n    border-radius: .25rem;\\r\\n    box-shadow: 0 8px 2px var(--shadow-2);\\r\\n  }\\r\\n\\r\\n.card-header:first-child {\\r\\n    border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;\\r\\n  }\\r\\n\\r\\n.inline-date{\\r\\n      display: inline-block;\\r\\n  }\\r\\n\\r\\n.inl-wrapper{\\r\\n    justify-content: center !important;\\r\\n  }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMtcGFuZWwvdXNlcnMtcGFuZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGtDQUFrQztBQUN0Qzs7QUFDQTtJQUNJLFVBQVU7SUFDVix3QkFBd0I7SUFDeEIseUJBQXlCO0FBQzdCOztBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUVsQixhQUFhO0lBR2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0Isa0NBQWtDO0lBQ2xDLHFCQUFxQjtJQUNyQixxQ0FBcUM7RUFDdkM7O0FBRUE7SUFDRSx3REFBd0Q7RUFDMUQ7O0FBRUE7TUFDSSxxQkFBcUI7RUFDekI7O0FBQ0E7SUFDRSxrQ0FBa0M7RUFDcEMiLCJmaWxlIjoic3JjL2FwcC91c2Vycy1wYW5lbC91c2Vycy1wYW5lbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIG1hcmdpbjogMWVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuLmZvcm0td3JhcHBlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbn1cclxudGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XHJcbiAgICBib3JkZXItYm90dG9tLXN0eWxlOiBub25lO1xyXG59XHJcbi5jYXJkIHtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWluLXdpZHRoOiAwO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IGJvcmRlci1ib3g7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoOTQsIDQ5LCAxNDQpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xyXG4gICAgYm94LXNoYWRvdzogMCA4cHggMnB4IHZhcigtLXNoYWRvdy0yKTtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtaGVhZGVyOmZpcnN0LWNoaWxkIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IGNhbGMoLjI1cmVtIC0gMXB4KSBjYWxjKC4yNXJlbSAtIDFweCkgMCAwO1xyXG4gIH1cclxuXHJcbiAgLmlubGluZS1kYXRle1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4gIC5pbmwtd3JhcHBlcntcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIl19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { IUserViewModel } from '../ClientViewModels/IUserVIewModel';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-users-panel',\n  templateUrl: './users-panel.component.html',\n  styleUrls: ['./users-panel.component.css']\n})\n\nexport class UsersPanelComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = [\"userId\", \"userName\", \"email\", \"actions\"];\n  users: IUserViewModel[]; \n  usersCount: number;\n  dataSource: MatTableDataSource<IUserViewModel>;\n  activePageDataChunk:Array<IUserViewModel> = [];\n  pageSize:number = 5;\n  userFilterForm: FormGroup;\n\n \n  constructor(private userService: UsersService, private fb: FormBuilder, public snackBar:MatSnackBar) {\n  }\n\n  ngOnInit() {\n\n    this.userFilterForm = this.fb.group({\n      UserName: ['', [\n\n      ]],\n      Email: ['', [\n      ]]\n    });\n    this.userService.getUsers()\n    .subscribe(data => {\n      this.users = data;\n      this.usersCount = data.length;\n      this.activePageDataChunk = data.slice(0,this.pageSize);\n      this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n      this.dataSource.paginator= this.paginator;\n    });\n  }\n\n  onPageChanged(e) {\n    let firstCut = e.pageIndex * e.pageSize;\n    let secondCut = firstCut + e.pageSize;\n    this.activePageDataChunk = this.users.slice(firstCut, secondCut);\n    this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n  }\n\n\n  applyFilter(event: Event) {\n    this.dataSource = new MatTableDataSource(this.users);\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n  }\n\n  deleteUser(userId){\n    this.userService.deleteUser(userId)\n    .subscribe(data => {\n      if(data['status']===1){\n        this.openSnackBar(data[\"message\"], 'Close', 'red-snackbar')\n      }else{\n        this.openSnackBar('User deleted successfully', 'Close', 'green-snackbar')\n        var filteredList: IUserViewModel[] = this.users.filter(user => user.userId !== userId);\n        this.users = filteredList;\n        this.usersCount = this.users.length;\n    \n        this.dataSource = new MatTableDataSource(this.users.slice(0,this.pageSize));\n      }\n    });\n\n\n\n  }\n  openSnackBar(message: string, action: string, className: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: [className]\n    });\n  }\n\n  applyFilters() {\n    var filterObj = {};\n    if (this.userFilterForm.controls[\"UserName\"].value) {\n      filterObj[\"UserName\"] = this.userFilterForm.controls[\"UserName\"].value;\n\n    }\n    if (this.userFilterForm.controls[\"Email\"].value) {\n      filterObj[\"Email\"] = this.userFilterForm.controls[\"Email\"].value\n    }\n\n    this.userService.getUsersFilter(filterObj)\n      .subscribe(data => {\n        this.users = data;\n        this.usersCount = data.length;\n        this.activePageDataChunk = data.slice(0, this.pageSize);\n        this.dataSource = new MatTableDataSource(this.activePageDataChunk);\n        \n        this.paginator.firstPage();\n      });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"https://ph-libraryapp.azurewebsites.net/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}